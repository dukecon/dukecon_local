@startuml
'skinparam linetype ortho
skinparam handwritten true

title DukeCon Local (Docker)

legend top right
'|= Types |
|<#orange> external |
|<#lightyellow> mandatory |
|<#lightblue> optional |
endlegend

node local <<YourMachine>> {
    interface browser #orange

    node docker {
        component edge <<HTTPD>> #lightyellow
        component "edge-with-static" as extended_edge <<HTTPD>> #lightgreen
        component pwa <<VueJS>> #lightyellow
        component server <<SpringBoot>> #lightyellow
        component archive <<HTTPD>> #lightblue
        component feedback <<SpringBoot>> #lightblue
        component "admin-client" <<Html5>> as admin #lightblue
        database postgres <<Docker>> #lightblue
    }

    folder data <<Directory>> {
        folder server_data <<Directory>> {
            file "config/conference.yml" <<File>> #lightyellow
        }
        folder feedback_data <<Directory>> #lightblue
        folder postgres_data <<Directory>> #lightblue
        folder edge_static <<Directory>> #lightgreen
    }

    browser --> edge : "http://localhost:9010"
    edge --> pwa : "/"
    edge --> server : "/rest"
    edge --> feedback : "/feedback"
    edge --> admin : "/admin"

    browser --> extended_edge #lightgreen : "http://localhost:9019"
    extended_edge --> pwa #lightgreen : "/"
    extended_edge --> server #lightgreen : "/rest"
    extended_edge --> feedback #lightgreen : "/feedback"
    extended_edge --> admin #lightgreen : "/admin"
    extended_edge --> edge_static #lightgreen : "/rest/(init|image-resources|conferences/)..."

    server --> archive : "Raw Conference Data"
    server --> postgres
    feedback --> postgres

    feedback .-> feedback_data : volume
    server .-> server_data : volume
    postgres .-> postgres_data : volume
}

cloud internet {
    node dukecon {
        component keycloak #orange
    }
}

browser -[dotted]-> keycloak : OAuth (get/refresh token)
server -[dotted]-> keycloak : OAuth (verify token)
feedback -[dotted]-> keycloak : OAuth (verify token)

@enduml
